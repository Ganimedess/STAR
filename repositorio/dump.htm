<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <title>Document</title>
</head>
<body class="px-5">
    <p>
                                                        <h4>CONTENT</h4>
        Ctrl+K --- > M  --- > type: "react" --- > enter === esto cambia a react intelisense y hace que programar en react sea más fácil
        "rafce" + Shift === auto arrow function de react en una página vacía


        "replacing < with &lt; or &60; and > with &gt; or &62; on each HTML tag that you want to be visible." <br>
        tipografías <br>
        landingPage <br>
        boxes/cards <br>
        hamburgesa ||| <br>
        Accessible Rich Internet Applications (ARIA) <br>
        <a href="/emojis.html"><button>emojis</button></a>
        <br>

        <br>
        _______________________________________ <br>
        EVERY GOOD LANDING PAGE SHOULD HAVE: <br><ul>
            A main headline and a supporting headline. <br>
            A unique selling proposition. <br>
            The benefits of your offering. <br>
            Images or video showing context of use. <br>
            Social proof. <br>
            A reinforcement statement. <br>
            A closing argument. <br>
            A call to action.
                </ul>
    </p>
    <p>
                                                        <h4>STRUCTURE</h4>

        semantic html <br>
        tables <br>
        forms <br>
        JSON gramatica <br>
        'defer' keyword <br>
        'lazy' keyword <br>

    </p>
    <p>
                                                        <h4>STYLE</h4>
        esto es esconder las barras scroll bar
        html, body, #root {
            scrollbar-width: none;
            -ms-overflow-style: none;
            overflow: hidden;
            height: 100%;
            background-color: var(--dPurp);
          }
          html::-webkit-scrollbar, body::-webkit-scrollbar {
            display: none;
          }



        esta es la grid que usa chrome en su web
        grid (chrome-grid-deffault)<br>
        <code>
            @media only screen and (min-width: 1440px)
            .chr-grid-default {
                grid-column-gap: 64px;
            }

            @media only screen and (min-width: 1024px)
            .chr-grid-default {
                grid-column-gap: 49px;
            }
            @media only screen and (min-width: 600px)
            .chr-grid-default {
                grid-column-gap: 40px;
                -ms-grid-columns: (1fr)[12];
                grid-template-columns: repeat(12, 1fr);
            }
            .chr-grid-default {
                display: -ms-grid;
                display: grid;
                grid-column-gap: 28px;
                -ms-grid-columns: (1fr)[4];
                grid-template-columns: repeat(4, 1fr);
            }
            *, *::before, *::after {
                -webkit-box-sizing: border-box;
                box-sizing: border-box;
            }
            hoja de estilo de user-agent
            div {
                display: block;
            }
        </code><br>
        media queries <br>
        variables <br>
        flexbox <br>
        animation <br>
        transition <br>
        bootstrap <br>
        position <br>
        box sizing <br>

    </p>
    <p>
                                                        <h4>LOGIC</h4>

        js syntax <br>
        parsear un archivo json <br>
        web components https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements<br>
        formularios y validación <br>
        captchas y seguridad <br>
    <br>
    <a href="https://es.react.dev/learn">react</a>

    </p>
    <p>
        .htaccess -redirección SPA React, para acceder a las urls secundarias desde el navegador sin problema
        <br>
            RewriteEngine On
            RewriteBase /

            # Redirige todas las solicitudes a la página principal
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule ^ index.html [QSA,L]



    </p>

</body>
</html>
